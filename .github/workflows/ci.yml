name: Auto extract

on:
  schedule:
    - cron: '0 10 * * *'
  workflow_dispatch:

jobs:
  main:
    runs-on: ubuntu-latest
    env:
      TQDM_MININTERVAL: 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Set up uv
      uses: astral-sh/setup-uv@v1
      with:
        uv-version: 'latest'

    - name: Install albi0
      run: uv tool install albi0

    - name: Verify albi0 installation
      run: ~/.local/bin/albi0 --version

    - name: Process packages and check for changes
      id: process_packages
      run: |
        chmod +x scripts/process_package.sh
        
        # Run processing for each package and collect potential commit message lines
        CONFIG_CHANGES=$(scripts/process_package.sh ConfigPackage newseer.config newseer)
        DEFAULT_CHANGES=$(scripts/process_package.sh \
          DefaultPackage \
          newseer.default \
          newseer \
          "*game_audios_cv*" \
          "*art_ui_pettype*" \
          "*art_ui_battleeffect*" \
          "*art_ui_avatar*" \
          "*game_ui_headframe*" \
          "*art_ui_namecard*" \
          "*assets_art_ui_assets_pet_head*" \
          "*assets_art_ui_assets_pet_body*" \
          "*assets_art_ui_assets_archive*" \
          "*assets_art_ui_assets_countermark*" \
          "*assets_art_ui_assets_item*")
        
        # Combine changes into a single variable
        ALL_CHANGES=""
        if [ -n "$CONFIG_CHANGES" ]; then
          ALL_CHANGES="$CONFIG_CHANGES"
        fi
        if [ -n "$DEFAULT_CHANGES" ]; then
          if [ -n "$ALL_CHANGES" ]; then
            ALL_CHANGES="${ALL_CHANGES}\n${DEFAULT_CHANGES}"
          else
            ALL_CHANGES="$DEFAULT_CHANGES"
          fi
        fi
        
        # Pass the result to the next step
        # Using a temporary file and heredoc for multiline robustness
        cat <<EOF > changes.txt
        $ALL_CHANGES
        EOF
        
        echo "changes<<EOF" >> "$GITHUB_OUTPUT"
        cat changes.txt >> "$GITHUB_OUTPUT"
        echo "EOF" >> "$GITHUB_OUTPUT"

    - name: Commit and push changes
      # This step only runs if the previous step produced output (i.e., versions changed)
      if: steps.process_packages.outputs.changes != ''
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config http.postBuffer 10g
        
        git add package-manifests/ newseer/assets
        
        # Commit only if there are actual file changes staged
        if ! git diff --staged --quiet; then
          COMMIT_MESSAGE=$(printf "Update packages\n%s" "${{ steps.process_packages.outputs.changes }}")
          git commit -m "$COMMIT_MESSAGE"
          git push
        else
          echo "No file changes to commit, although version numbers might have changed."
        fi
